petabridge.cmd{
 	host = "127.0.0.1"
 	port = 0
}

 akka {
 	  MaserServer = actor-system 
      log-config-on-start = on  
      actor {
         
      }

  persistence {
    publish-plugin-commands = on
	journal {
	    plugin = "akka.persistence.journal.mongodb"
		mongodb {
			# qualified type name of the MongoDb persistence journal actor
			#class = "Akka.Persistence.MongoDb.Journal.MongoDbJournal, Akka.Persistence.MongoDb"

			# connection string used for database access
			connection-string = "mongodb://localhost:27017/fzf003"

			# should corresponding journal table's indexes be initialized automatically
			auto-initialize = on

			# dispatcher used to drive journal actor
			#plugin-dispatcher = "akka.actor.default-dispatcher"

			# MongoDb collection corresponding with persistent journal
			collection = "EventJournal"

			# metadata collection
			metadata-collection = "Metadata"

			# For users with legacy data, who want to keep writing data to MongoDb using the original BSON format
			# and not the standard binary format introduced in v1.4.0 (see https://github.com/akkadotnet/Akka.Persistence.MongoDB/issues/72)
			# enable this setting via `legacy-serialization = on`.
			#
			# NOTE: this will likely break features such as Akka.Cluster.Sharding, IActorRef serialization, AtLeastOnceDelivery, and more.
			legacy-serialization = on
		}
	}

	snapshot-store {
		plugin = "akka.persistence.snapshot-store.mongodb"
		mongodb {
		   #class = "Akka.Persistence.MongoDb.Snapshot.MongoDbSnapshotStore, Akka.Persistence.MongoDb"

			# connection string used for database access
			connection-string = "mongodb://localhost:27017/fzf003"

			# should corresponding snapshot's indexes be initialized automatically
			auto-initialize = on

			collection = "SnapshotStore"

			legacy-serialization = on
		}
	}

    query {
        mongodb {
            class = "Akka.Persistence.MongoDb.Query.MongoDbReadJournalProvider, Akka.Persistence.MongoDb"
 
            refresh-interval = 3s
  
            max-buffer-size = 500
        }
    }
  }
 }